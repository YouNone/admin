// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";

/*Mat-icons set */

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$alexAdmin-primary: mat-palette($mat-indigo);
$alexAdmin-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$alexAdmin-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$alexAdmin-theme: mat-light-theme($alexAdmin-primary, $alexAdmin-accent, $alexAdmin-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($alexAdmin-theme);

/* You can add global styles to this file, and also import other style files */

/* Импорт внешних библиотек стилей */
@import "bootstrap/scss/bootstrap-grid.scss";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/utilities";

html,
body {
  height: 100%;
}
body,
p {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

a,
a:link,
a:active,
a:hover {
  color: black;
  text-decoration: none;
}

.brd {
  border: solid red 1px;
}

.cover-parent {
  position: absolute;
  z-index: 1;
  background-color: white;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: auto;
}
.component-inset {
  height: 100%; 
	overflow: auto;
  padding: 16px;
}

// Класс всплывающих уведомлений
.simple-notification-wrapper.center {
  width: 500px !important;
  word-wrap: break-word;
}

#screen {
  display: flex;
  flex-direction: column;
  position: absolute;
  width: 100%;
  height: 100%;
  flex-wrap: nowrap;
  mat-sidenav-content {
    background-color: white;
  }
}

#main-sidenav {
  overflow-x: hidden;
  overflow-y: auto;
  width: 250px;
  height: 100%;
  margin: 0;
}

#main-menu {
  overflow-x: hidden;
  overflow-y: auto;
  height: 100%;
  margin: 0;
  overflow-x: hidden;
  // background-color: #ededed;
}

app-header {
  display: block;
  height: 50px;

  header {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-self: center;
    align-items: stretch;
    background-color: #ddd;

    [class^="box-"] {
      align-self: center;
    }

    .box-nav {
      margin: 0px 20px 0 20px;
      color: #444;
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
    }

    .box-right {
      flex-grow: 1;
      padding: 10px 20px;
    }
  }
}
.menu {
  display: flex;
  flex-direction: column;
  .item {
    background-color: #ededed;
    width: 100%;
    a {
      display: block;
      width: 100%;
      padding: 10px;
      color: black;
    }
    a:hover {
      background-color: #dddddd;
      padding: 9px;
      border: rgb(196, 196, 196) solid 1px;
    }
  }
}

.component-fullscreen-sidenav {
  width: 100%;
  height: 100%;
  .mat-sidenav-content,
  .mat-sidenav {
    height: 100%;
  }
  .mat-sidenav {
    width: 300px;
  }
}

.bottom-right-container {
  position: fixed;
  bottom: 50px;
  right: 50px;
  z-index: 1;
}

.enum-holder {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.enum-element {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.point, a {
	cursor: pointer;
}

.input-val {
	width: 15%;
}

.input-name {
	width: 50%;
  margin-left: 5%;
	textarea {
    min-height: 25px;
		overflow: hidden;
	}
}

.button-column {
	width: 10%;
}
.discription-scale {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

table.hover {
	td.mat-cell, td.mat-footer-cell, th.mat-header-cell {
		padding-left: 5px;
		padding-right: 5px;
	}
	td {
		min-width: 90px;
	}
	th {
		background-color: white;
		color: black;
		font-weight: bold;
		font-size: 1em;
	}
	tr:hover {
		background-color:  #dddddd; 
	}
	th.operation-center, td.operation-center {
		text-align: center;
		width: 80px;
	}
}

.leader-type-container {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

// monaco holder
// .tab-group-100 {
// 	display: flex;
// 	flex-direction: column;
// 	height: 100%;
// 	.mat-tab-body {
// 		flex-grow: 1;
// 	}
	
// 	.mat-tab-body-wrapper{
//     flex-grow: 1;
    
// 		.mat-tab-body-content {
//       position: relative;

// 			.scrolled-tab-content {
// 				overflow: auto;
// 				display: block;
// 				position: absolute;
// 				top: 0;
// 				left: 0;
// 				right: 0;
//         bottom: 0;
// 			}
// 		}
// 	}
// }

// ngx-monaco-editor.template-editor {
//   height: 400px;
// 	padding-top: 15px;
// }

ngx-monaco-editor.template-editor {
  min-height: 550px;
  padding-top: 15px;
}